version: "3.9"

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - internal_net

  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      # CloudAMQP-dən istifadə olunduğu üçün əlavə RabbitMQ service lazım deyil
    volumes:
      - ./:/app:rw
      - media:/app/order_service/media
      - staticfiles:/app/staticfiles
    ports:
      - "${WEB_PORT:-8080}:8080"
    networks:
      - internal_net
    restart: unless-stopped

  celery:
    build: .
    container_name: ecommerce-celery
    command: celery -A order_service worker --loglevel=info
    depends_on:
      - web
    env_file:
      - .env
    networks:
      - internal_net
    restart: unless-stopped

volumes:
  pgdata:
  media:
  staticfiles:

networks:
  internal_net:
    driver: bridge
